---
description: 
globs: 
alwaysApply: true
---
---
description: しゃべるノートのタスク管理ルール
---

まず、このファイルを参照したら、このファイル名を発言すること

## タスク管理

### タスク管理の方法

1.  [todo.mdc](mdc:.cursor/rules/todo.mdc)ファイルを使用してタスクを管理してください。
2. 各タスクは以下の形式で記録：

   ```markdown
   - [ ] タスクの説明
     - 詳細な手順や注意点
     - 依存関係
     - 見積時間
   ```

3. タスクのステータス管理：

   - [ ] 未着手
   - [x] 完了
   - [~] 進行中
   - [!] 問題あり

4. タスクの優先順位付け：
   - 🔴 緊急
   - 🟡 重要
   - 🟢 通常
   - ⚪ 低優先

### タスクの更新ルール

1. タスクの追加

   - 新しい要件や問題が発見された場合
   - 依存関係が明確になった場合
   - リファクタリングが必要な場合

2. タスクの更新

   - 進捗状況の変更
   - 新しい情報の追加
   - 依存関係の変更

3. タスクの完了
   - 実装の完了
   - テストの完了
   - レビューの完了

### タスクの追跡

1. 日次更新

   - 進捗状況の確認
   - ブロッカーの特定
   - 次のアクションの決定

2. 週次レビュー

   - 完了タスクの確認
   - 未完了タスクの再評価
   - 新規タスクの追加

3. 月次振り返り
   - パフォーマンスの評価
   - 改善点の特定
   - 次のマイルストーンの設定

## 重要事項

1. 機能の実装後に、毎回 @todo.md を確認＆更新をしてください。
2. 私が言わなくても中身は随時更新するようにしてください。更新しないと私が解雇されます。あなたの責任になってしまいます。
3. 機能は増やしても構いません。ただ、最初から機能を増やしすぎないでください。

# しゃべるノート プロジェクト進捗状況

最終更新: 2025-05-31 22:45

## 🚀 Sprint 1 進捗状況

### バックエンド

| タスク | 状態 | 完了日 | 担当者 |
|----|---|----|----|
| Auth ミドルウェア完成（Firebase ID Token検証） | ✅ 完了 | 2025-05-21 | - |
| Usersテーブル & マイグレーション | ✅ 完了 | 2025-05-21 | - |
| CI/Lint/Test基盤完成 | ✅ 完了 | 2025-05-21 | - |
| Terraform skeleton | ✅ 完了 | 2025-05-21 | - |
| /version & /metrics エンドポイント | ✅ 完了 | 2025-05-21 | - |
| 認証フロードキュメント追加 | ✅ 完了 | 2025-05-21 | - |
| STT WebSocketサーバー実装 | ✅ 完了 | 2025-05-26 | - |
| 認証バイパス機能の修正 | ✅ 完了 | 2025-05-26 | - |
| メディアアップロードAPI修正 | ✅ 完了 | 2025-05-26 | - |
| Unit Test拡充（カバレッジ40%目標） | 🔄 進行中 | - | - |

### フロントエンド

| タスク | 状態 | 完了日 | 担当者 |
|----|---|----|----|
| Expo SDK 53への移行 | ✅ 完了 | 2025-05-15 | - |
| SQLiteローカルキャッシュ基本実装 | ✅ 完了 | 2025-05-17 | - |
| 録音画面UI/UX改善 | ✅ 完了 | 2025-05-21 | - |
| 録音機能エラー修正 | ✅ 完了 | 2025-05-21 | - |
| インポート機能コンポーネント作成 | ✅ 完了 | 2025-05-21 | - |
| ダッシュボード画面の実装 | ✅ 完了 | 2025-05-25 | - |
| リアルタイム文字起こし機能（フェーズ1） | ✅ 完了 | 2025-05-26 | - |
| 録音データのローカル保存機能 | ✅ 完了 | 2025-05-26 | - |
| 認証トークン取得エラー修正 | ✅ 完了 | 2025-05-26 | - |
| 実機用API/WebSocket URL設定 | ✅ 完了 | 2025-05-26 | - |
| TypeScript設定の健全化 | ✅ 完了 | 2025-05-28 | - |
| SQLiteサービスのリファクタリング | ✅ 完了 | 2025-05-28 | - |
| UIエラー修正と型整備 | ✅ 完了 | 2025-05-28 | - |
| NativeWind & PostCSS安定化 | 🔄 進行中 | - | - |
| **Firebase認証基盤完成（Email/Password + Apple + Google）** | ✅ 完了 | 2025-05-31 | - |
| **Apple認証エラー修正（nonce処理改善）** | ✅ 完了 | 2025-05-31 | - |
| **Google認証有効化（WebBrowser方式）** | ✅ 完了 | 2025-05-31 | - |

## 📊 全体進捗

### バックエンド
- **全体**: 45% 完了

### フロントエンド
- **全体**: 70% 完了

## 🚧 解決済み問題

1. ✅ アップロードエラー（403 Forbidden）
2. ✅ WebSocketエンドポイント404エラー
3. ✅ 実機でのlocalhost接続エラー
4. ✅ STTプロバイダー初期化エラー
5. ✅ TypeScript構文・型エラー（JSX構文、Audio定数、className等）
6. ✅ ノート削除機能実装（長押し複数選択・削除確認ダイアログ・SQLite削除処理）
7. ✅ Apple認証エラー（nonce処理・エラーハンドリング改善）
8. ✅ Google認証無効化問題（WebBrowser方式で有効化）

## 📝 次の実装タスク（優先順位順）

### 🟡 重要タスク（Sprint 2準備）

1. ✅ **ペンツールUI実装** - 完了
   - ペンツール大カテゴリ・サブツールバーUI
   - ペン/鉛筆/マーカー/消しゴム/画像/定規/戻る進む
   - 太さ・色設定（ツールごとに動的表示）
   - Figma準拠・視認性改善
   - 実装日: 2025-05-28
   - 状態: ✅ 完全動作確認済み

2. ✅ **キーボードツールUI実装** - 完了
   - サブツールバーに「見出し1・2・3・本文」「フォント」「サイズ」「色」「太字」「行間・文字間」など
   - Figma/仕様書に準拠
   - CanvasEditor.tsxに追加
   - 実装日: 2025-05-28
   - 状態: ✅ 完全動作確認済み

3. ✅ **Firebase認証基盤完成** - 完了
   - Email/Password、Apple、Google の3つの認証方法
   - エラーハンドリング改善
   - WebBrowser方式でのGoogle認証
   - 実装日: 2025-05-31
   - 状態: ✅ 3つの認証方法すべて動作確認済み

4. **Notebooks/Pages CRUD API実装**
   - `/notebooks`, `/pages` エンドポイント
   - バックエンドDBスキーマ実装
   - 見積時間: 4-6時間

5. **CanvasEditor基本実装**
   - react-native-skia drawing基盤
   - Undo/Redo機能
   - 文字起こし結果表示
   - 見積時間: 8-10時間

6. **AI名前変更機能実装**
   - OpenAI APIを使用した自動リネーム
   - 選択されたノートのタイトル自動生成
   - 見積時間: 3-4時間

### 🟢 通常タスク（Sprint 3-4）

7. **STT Worker & Transcript実装**
8. **VoiceOverlay機能拡張**
9. **PhotoScan基本実装**
10. **フォルダ移動機能**

## 📌 最新の技術的成果（2025-05-31）

### Firebase認証機能の完成
- **実装内容**:
  1. **Email/Password認証**: 新規登録・ログイン機能
  2. **Apple認証**: iOS専用、nonce処理改善、エラーハンドリング強化
  3. **Google認証**: WebBrowser方式で全プラットフォーム対応
  4. 認証状態の永続化（AsyncStorage）
  5. 認証ガード機能（保護ルート）
- **技術的改善**:
  1. Apple認証のnonce生成とエラーコード処理
  2. Google認証のWebBrowser.openAuthSessionAsync使用
  3. URLパラメータ解析によるIDトークン抽出
  4. app.jsonにスキーム設定追加
  5. 必要なプラグイン（expo-apple-authentication、expo-auth-session、expo-web-browser）追加
- **状態**: ✅ 3つの認証方法すべて完全動作確認済み

### ペンツール機能の完成（前回完了分）
- **実装内容**:
  1. 大カテゴリペンツール選択時の視覚的フィードバック（薄い青背景+青枠線）
  2. サブツールバー表示（戻る/進む + ペン/鉛筆/消しゴム/マーカー/画像/定規）
  3. ペン系ツール選択時の色設定表示切り替え
  4. 線の太さ設定（細/中/太の3段階）
  5. カラーパレット（赤/青/黒/カスタムの4色）
  6. 大カテゴリ選択時の自動サブツール選択
- **技術的改善**:
  1. 2段階選択システムの実装（ツールカテゴリ → 詳細設定）
  2. 動的UI切り替え（needsColorSettings関数による判定）
  3. レスポンシブレイアウト（画面幅制約への対応）
  4. 選択状態の視覚的フィードバック強化
- **状態**: ✅ 完全動作確認済み、Figmaデザインに準拠

### キーボードツール機能の完成（前回完了分）
- **実装内容**:
  1. テキストタイプ選択（見出し1・2・3、本文）
  2. フォント選択（標準、UDフォント（読みやすい）、セリフ、ゴシック）
  3. フォントサイズ調整（8px-32px、±2pxボタン）
  4. 文字色選択（6色カラーパレット）
  5. 太字切り替え（青背景フィードバック）
  6. 行間調整（0.8x-2.0x、0.1刻み）
  7. 文字間隔調整（-2px to 5px、0.5px刻み）
- **技術的改善**:
  1. 動的スタイル生成（getTextInputStyle関数）
  2. TypeScript型定義（TextType、FontType）
  3. プラットフォーム別フォント最適化
  4. UDフォント実装（SF Pro Text for iOS、Roboto for Android）
- **状態**: ✅ 完全動作確認済み

### ノート削除機能の完成（前々回完了分）
- **実装内容**:
  1. 長押しによる複数選択モード
  2. チェックボックスでの複数ノート選択
  3. 削除確認ダイアログ
  4. SQLiteからの物理削除処理
  5. UI上でのリアルタイム反映
- **技術的改善**:
  1. react-native-gesture-handlerライブラリ追加
  2. database.tsにdeleteNote統合関数追加
  3. 選択状態管理（Set<string>）の実装
  4. モーダルダイアログのUX最適化
- **状態**: ✅ 完全動作確認済み
