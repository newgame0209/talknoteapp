---
description: 
globs: 
alwaysApply: false
---
## 進捗状況
- フロントエンド進捗率：60%
- バックエンド進捗率：45%
- 全体進捗率：52%

（進捗率は implementation.mdc のロードマップ・スプリント計画・主要タスクの完了状況に基づく）

---

## 進捗・優先タスク

### 完了したタスク
- 録音データのローカル保存機能
- CanvasEditor（ノート詳細画面）のMVP実装
  - タイトル表示・編集
  - 文字起こしテキストの表示・編集
  - 保存機能
- 録音→リアルタイムSTT→クラウドアップロード→ノート作成の一連の流れ（Expo Go上で動作確認済み）
- [x] ノートリストのスクロール感度をFlatListで改善
  - ノート上でもスムーズにスクロールできるようにした
  - スワイプ削除を廃止し、長押しで選択モード＋アクションメニュー削除に統一
  - アクションメニューのUIは変更なし
  - 初回長押し時のヒント表示は今後追加予定
- [x] ダッシュボード画面のScrollView排除・FlatList単体化
  - VirtualizedListエラーを完全解消
  - ヘッダー・フッターをListHeaderComponent/ListFooterComponentで実装
  - 英語ノート・しゃべるノートマニュアルを削除
  - スクロール体験は維持
- [x] 録音ノートのAIタイトル生成をリアルタイムで反映する
  - 録音停止時に即座にAIタイトル生成APIを呼び出す
  - ダッシュボードで1秒ごとにタイトル生成状況を監視し、完了時に自動反映
  - タイトル生成中はグレー文字＋点線枠でUI表示
  - キャンバス画面ではタイトルのみ表示（日付は非表示）
  - テスト・動作確認済み
  - 2025-05-XX 完了
- [x] ダッシュボード画面のプル・トゥ・リフレッシュ（スワイプ更新）機能実装
  - RefreshControlでiOS上部ノッチと被らないように調整
  - 更新中は他の操作を無効化
  - データベースからの再取得・UI反映・最低表示時間確保
  - 2025-05-XX 完了

### 最優先タスク（🔴 緊急）
- チャンク分割アップロード機能の本番実装
  - 5MB超の大容量ファイル対応
  - クライアント側の分割・再送・進捗表示
  - サーバー側のチャンク結合・整合性チェック
  - Expo Goでは検証不可のため、本番ビルド後に必ず動作確認
- 本番ビルド（EAS Build）での大容量ファイルアップロード検証
  - 90分録音ファイルでの動作確認
  - エラー時のリトライ・再送ロジック

### 重要タスク（🟡 重要）
- メディアアップロードAPIのエラーハンドリング強化
  - 失敗時のユーザー通知・リトライUI
- ノート削除機能の実装
  - ダッシュボードでのノート削除UI
  - SQLite/クラウド両対応
  - 削除確認ダイアログ
- Google STTプロバイダーの本格実装
  - 認証情報の設定
  - 本番環境でのSTT機能テスト
  - エラーハンドリングの改善

### 通常タスク（🟢 通常）
- ノート詳細画面（CanvasEditor）の拡張
  - ペン・手書き描画機能
  - AIチャットウィジェット
  - フッターの紙設定UI
  - ページ切り替え・検索UI
- AIタイトル自動生成
- 録音画面でのタイトル編集

### メモ
- Expo Goでは大容量ファイルやチャンク分割アップロードの実機検証は不可。本番ビルド後に必ず検証すること。
- 進捗・タスクは毎回@todo.mdcを更新すること。

# しゃべるノート（TalkNote）開発タスク

## 全体進捗
- 全体進捗: 52%
- フロントエンド: 61%
- バックエンド: 45%

## 優先タスク
1. ~~ダッシュボードのプルリフレッシュ機能実装~~ ✅
2. ~~CanvasEditorのキーボードツール実装~~ ✅
   - ~~キーボードツールのサブツールバー実装~~ ✅
   - ~~テキストタイプ選択機能実装~~ ✅
   - ~~フォント選択機能実装~~ ✅
   - ~~フォントサイズ調整機能実装~~ ✅
   - ~~テキストカラー選択機能実装~~ ✅
   - ~~レイアウト調整（左寄せ、余白調整）~~ ✅
3. ~~音声ツールバーUIの見切れ解消・録音中の左寄せ・右端アイコン非表示対応~~ ✅
4. 音声認識機能の改善
   - 認識精度の向上
   - エラーハンドリングの強化
   - ユーザーフィードバックの実装

## 完了したタスク
1. ダッシュボードのプルリフレッシュ機能
   - SQLiteとの連携実装
   - データ更新処理の最適化
   - UI/UXの改善

2. CanvasEditorのキーボードツール
   - サブツールバーの実装
     - 左寄せレイアウトの実装
     - アイコン間の余白調整
     - 色変更メニューの位置調整
   - テキストタイプ選択機能
     - 本文、見出し1-3の選択肢
     - ドロップダウンメニューの実装
   - フォント選択機能
     - UDフォント、標準フォント、明朝体、ゴシック体の選択肢
     - ドロップダウンメニューの実装
   - フォントサイズ調整機能
     - 10-30pxの範囲で調整可能
     - +/-ボタンによる直感的な操作
   - テキストカラー選択機能
     - 6色のカラーパレット
     - カラーピッカーの実装
   - レイアウト調整
     - ツールバーの左寄せ
     - アイコン間の適切な余白設定
     - 色変更メニューの位置最適化
3. 音声ツールバーUI
   - 録音UIの見切れ解消
   - 録音中の左寄せレイアウト
   - 録音中は右端アイコン（しおり・三点リーダー）を非表示
   - 停止ボタンを赤色で強調

## 次のタスク
1. 音声認識機能の改善
   - 認識精度の向上
   - エラーハンドリングの強化
   - ユーザーフィードバックの実装

2. パフォーマンス最適化
   - メモリ使用量の削減
   - レンダリングの最適化
   - データベースクエリの改善

3. テスト
   - ユニットテストの追加
   - 統合テストの実装
   - エッジケースのテスト

## 技術的な課題
1. 音声認識の精度向上
   - ノイズ除去の改善
   - 文脈理解の強化
   - エラー訂正機能の実装

2. パフォーマンス
   - メモリリークの解消
   - レンダリングの最適化
   - データベースのインデックス最適化

3. セキュリティ
   - データの暗号化
   - アクセス制御の強化
   - セキュリティテストの実施
